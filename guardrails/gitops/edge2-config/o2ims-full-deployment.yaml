---
apiVersion: v1
kind: Namespace
metadata:
  name: o2ims-system
  labels:
    name: o2ims-system
    site: edge2
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: o2ims-config
  namespace: o2ims-system
data:
  site: "edge2"
  cluster: "edge2-cluster"
  api-version: "v1"
  smo-endpoint: "http://172.16.0.78:8080"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: o2ims-api
  namespace: o2ims-system
  labels:
    app: o2ims
    component: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: o2ims
      component: api
  template:
    metadata:
      labels:
        app: o2ims
        component: api
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-o2ims-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-o2ims-config
  namespace: o2ims-system
data:
  default.conf: |
    server {
        listen 80;
        location / {
            add_header Content-Type application/json;
            return 200 '{"apiVersion":"o2ims/v1","kind":"Status","status":"OK","site":"edge2"}';
        }
        location /o2ims {
            add_header Content-Type application/json;
            return 200 '{"apiVersion":"o2ims/v1","endpoints":["/deploymentManagers","/resourcePools","/resourceTypes","/resources","/alarms","/subscriptions"]}';
        }
        location /health {
            return 200 'OK';
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: o2ims-api
  namespace: o2ims-system
spec:
  type: NodePort
  selector:
    app: o2ims
    component: api
  ports:
  - port: 80
    targetPort: 80
    nodePort: 31280
