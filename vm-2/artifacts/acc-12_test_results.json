{"created": 1757790039.60371, "duration": 0.5285170078277588, "exitcode": 1, "root": "/home/ubuntu", "environment": {}, "summary": {"passed": 2, "failed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/test_acc12_rootsync.py", "type": "Module"}]}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification", "outcome": "passed", "result": [{"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_artifacts_directory_exists", "type": "TestCaseFunction", "lineno": 106}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_config_management_namespace_exists", "type": "TestCaseFunction", "lineno": 41}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_generate_acc12_artifacts", "type": "TestCaseFunction", "lineno": 113}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_kubectl_context_exists", "type": "TestCaseFunction", "lineno": 33}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_rootsync_is_synced", "type": "TestCaseFunction", "lineno": 63}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_rootsync_points_to_gitops_edge2_config", "type": "TestCaseFunction", "lineno": 86}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_rootsync_resource_exists", "type": "TestCaseFunction", "lineno": 50}]}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12Implementation", "outcome": "passed", "result": [{"nodeid": "tests/test_acc12_rootsync.py::TestACC12Implementation::test_full_acc12_workflow", "type": "TestCaseFunction", "lineno": 155}]}, {"nodeid": "tests/test_acc12_rootsync.py", "outcome": "passed", "result": [{"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification", "type": "UnitTestCase"}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12Implementation", "type": "UnitTestCase"}]}], "tests": [{"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_artifacts_directory_exists", "lineno": 106, "outcome": "passed", "keywords": ["test_artifacts_directory_exists", "TestACC12RootSyncVerification", "test_acc12_rootsync.py", "tests", "ubuntu", ""], "setup": {"duration": 0.0004933730233460665, "outcome": "passed"}, "call": {"duration": 0.0003363389987498522, "outcome": "passed"}, "teardown": {"duration": 0.0001932269660755992, "outcome": "passed"}}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_config_management_namespace_exists", "lineno": 41, "outcome": "failed", "keywords": ["test_config_management_namespace_exists", "TestACC12RootSyncVerification", "test_acc12_rootsync.py", "tests", "ubuntu", ""], "setup": {"duration": 0.00020285905338823795, "outcome": "passed"}, "call": {"duration": 0.06257484294474125, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 866, "message": "AssertionError: 1 != 0 : Namespace config-management-system should exist in edge2"}, "traceback": [{"path": "tests/test_acc12_rootsync.py", "lineno": 48, "message": "in test_config_management_namespace_exists"}], "longrepr": "tests/test_acc12_rootsync.py:48: in test_config_management_namespace_exists\n    self.assertEqual(result.returncode, 0,\nE   AssertionError: 1 != 0 : Namespace config-management-system should exist in edge2"}, "teardown": {"duration": 0.0002893110504373908, "outcome": "passed"}}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_generate_acc12_artifacts", "lineno": 113, "outcome": "failed", "keywords": ["test_generate_acc12_artifacts", "TestACC12RootSyncVerification", "test_acc12_rootsync.py", "tests", "ubuntu", ""], "setup": {"duration": 0.00023054506164044142, "outcome": "passed"}, "call": {"duration": 0.07038587995339185, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 866, "message": "AssertionError: 1 != 0 : Should be able to get RootSync data"}, "traceback": [{"path": "tests/test_acc12_rootsync.py", "lineno": 122, "message": "in test_generate_acc12_artifacts"}], "longrepr": "tests/test_acc12_rootsync.py:122: in test_generate_acc12_artifacts\n    self.assertEqual(result.returncode, 0, \"Should be able to get RootSync data\")\nE   AssertionError: 1 != 0 : Should be able to get RootSync data"}, "teardown": {"duration": 0.000724146026186645, "outcome": "passed"}}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_kubectl_context_exists", "lineno": 33, "outcome": "failed", "keywords": ["test_kubectl_context_exists", "TestACC12RootSyncVerification", "test_acc12_rootsync.py", "tests", "ubuntu", ""], "setup": {"duration": 0.000492256018333137, "outcome": "passed"}, "call": {"duration": 0.0604915099684149, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 703, "message": "AssertionError: 'edge2' not found in 'kind-edge\\n' : edge2 context should exist in kubectl config"}, "traceback": [{"path": "tests/test_acc12_rootsync.py", "lineno": 40, "message": "in test_kubectl_context_exists"}], "longrepr": "tests/test_acc12_rootsync.py:40: in test_kubectl_context_exists\n    self.assertIn(\"edge2\", result.stdout, \"edge2 context should exist in kubectl config\")\nE   AssertionError: 'edge2' not found in 'kind-edge\\n' : edge2 context should exist in kubectl config"}, "teardown": {"duration": 0.0005007010186091065, "outcome": "passed"}}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_rootsync_is_synced", "lineno": 63, "outcome": "failed", "keywords": ["test_rootsync_is_synced", "TestACC12RootSyncVerification", "test_acc12_rootsync.py", "tests", "ubuntu", ""], "setup": {"duration": 0.000489672995172441, "outcome": "passed"}, "call": {"duration": 0.06482686405070126, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 866, "message": "AssertionError: 1 != 0 : Should be able to get RootSync status"}, "traceback": [{"path": "tests/test_acc12_rootsync.py", "lineno": 71, "message": "in test_rootsync_is_synced"}], "longrepr": "tests/test_acc12_rootsync.py:71: in test_rootsync_is_synced\n    self.assertEqual(result.returncode, 0, \"Should be able to get RootSync status\")\nE   AssertionError: 1 != 0 : Should be able to get RootSync status"}, "teardown": {"duration": 0.00033617892768234015, "outcome": "passed"}}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_rootsync_points_to_gitops_edge2_config", "lineno": 86, "outcome": "failed", "keywords": ["test_rootsync_points_to_gitops_edge2_config", "TestACC12RootSyncVerification", "test_acc12_rootsync.py", "tests", "ubuntu", ""], "setup": {"duration": 0.0002494039945304394, "outcome": "passed"}, "call": {"duration": 0.0723092530388385, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 866, "message": "AssertionError: 1 != 0 : Should be able to get RootSync configuration"}, "traceback": [{"path": "tests/test_acc12_rootsync.py", "lineno": 94, "message": "in test_rootsync_points_to_gitops_edge2_config"}], "longrepr": "tests/test_acc12_rootsync.py:94: in test_rootsync_points_to_gitops_edge2_config\n    self.assertEqual(result.returncode, 0, \"Should be able to get RootSync configuration\")\nE   AssertionError: 1 != 0 : Should be able to get RootSync configuration"}, "teardown": {"duration": 0.00029898504726588726, "outcome": "passed"}}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12RootSyncVerification::test_rootsync_resource_exists", "lineno": 50, "outcome": "failed", "keywords": ["test_rootsync_resource_exists", "TestACC12RootSyncVerification", "test_acc12_rootsync.py", "tests", "ubuntu", ""], "setup": {"duration": 0.00032952893525362015, "outcome": "passed"}, "call": {"duration": 0.05807850800920278, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 866, "message": "AssertionError: 1 != 0 : RootSync resource should exist"}, "traceback": [{"path": "tests/test_acc12_rootsync.py", "lineno": 58, "message": "in test_rootsync_resource_exists"}], "longrepr": "tests/test_acc12_rootsync.py:58: in test_rootsync_resource_exists\n    self.assertEqual(result.returncode, 0, \"RootSync resource should exist\")\nE   AssertionError: 1 != 0 : RootSync resource should exist"}, "teardown": {"duration": 0.00041194900404661894, "outcome": "passed"}}, {"nodeid": "tests/test_acc12_rootsync.py::TestACC12Implementation::test_full_acc12_workflow", "lineno": 155, "outcome": "passed", "keywords": ["test_full_acc12_workflow", "TestACC12Implementation", "test_acc12_rootsync.py", "tests", "ubuntu", ""], "setup": {"duration": 0.0004562829853966832, "outcome": "passed"}, "call": {"duration": 0.00035261898301541805, "outcome": "passed"}, "teardown": {"duration": 0.00028182403184473515, "outcome": "passed"}}]}