{"created": 1757790047.851622, "duration": 3.225933790206909, "exitcode": 1, "root": "/home/ubuntu", "environment": {}, "summary": {"failed": 8, "passed": 1, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/test_acc19_pr_verification.py", "type": "Module"}]}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest", "outcome": "passed", "result": [{"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_discover_pr_crd_resources", "type": "TestCaseFunction", "lineno": 45}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_generate_acc19_artifacts", "type": "TestCaseFunction", "lineno": 296}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_pr_crd_definition_exists", "type": "TestCaseFunction", "lineno": 83}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_pr_resource_lifecycle_state", "type": "TestCaseFunction", "lineno": 255}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_pr_resource_validation_schema", "type": "TestCaseFunction", "lineno": 197}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_pr_resources_have_ready_status", "type": "TestCaseFunction", "lineno": 106}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_pr_services_are_reachable", "type": "TestCaseFunction", "lineno": 151}]}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19Integration", "outcome": "passed", "result": [{"nodeid": "tests/test_acc19_pr_verification.py::TestACC19Integration::test_end_to_end_pr_verification_workflow", "type": "TestCaseFunction", "lineno": 373}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19Integration::test_verification_artifacts_completeness", "type": "TestCaseFunction", "lineno": 389}]}, {"nodeid": "tests/test_acc19_pr_verification.py", "outcome": "passed", "result": [{"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest", "type": "UnitTestCase"}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19Integration", "type": "UnitTestCase"}]}], "tests": [{"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_discover_pr_crd_resources", "lineno": 45, "outcome": "failed", "keywords": ["test_discover_pr_crd_resources", "TestACC19O2IMSProvisioningRequest", "test_acc19_pr_verification.py", "tests", "ubuntu", ""], "setup": {"duration": 0.00043951498810201883, "outcome": "passed"}, "call": {"duration": 0.268865401041694, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 703, "message": "AssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource"}, "traceback": [{"path": "tests/test_acc19_pr_verification.py", "lineno": 78, "message": "in test_discover_pr_crd_resources"}], "longrepr": "tests/test_acc19_pr_verification.py:78: in test_discover_pr_crd_resources\n    self.assertGreater(len(discovered_crds), 0,\nE   AssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource"}, "teardown": {"duration": 0.0002794669708237052, "outcome": "passed"}}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_generate_acc19_artifacts", "lineno": 296, "outcome": "failed", "keywords": ["test_generate_acc19_artifacts", "TestACC19O2IMSProvisioningRequest", "test_acc19_pr_verification.py", "tests", "ubuntu", ""], "setup": {"duration": 0.00025066593661904335, "outcome": "passed"}, "call": {"duration": 0.26813395507633686, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 703, "message": "AssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource"}, "traceback": [{"path": "tests/test_acc19_pr_verification.py", "lineno": 303, "message": "in test_generate_acc19_artifacts"}, {"path": "tests/test_acc19_pr_verification.py", "lineno": 78, "message": "in test_discover_pr_crd_resources"}], "longrepr": "tests/test_acc19_pr_verification.py:303: in test_generate_acc19_artifacts\n    self.test_discover_pr_crd_resources()\ntests/test_acc19_pr_verification.py:78: in test_discover_pr_crd_resources\n    self.assertGreater(len(discovered_crds), 0,\nE   AssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource"}, "teardown": {"duration": 0.0002928789472207427, "outcome": "passed"}}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_pr_crd_definition_exists", "lineno": 83, "outcome": "failed", "keywords": ["test_pr_crd_definition_exists", "TestACC19O2IMSProvisioningRequest", "test_acc19_pr_verification.py", "tests", "ubuntu", ""], "setup": {"duration": 0.0002278069732710719, "outcome": "passed"}, "call": {"duration": 0.07588748901616782, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 866, "message": "AssertionError: 1 != 0 : Should be able to query CRDs"}, "traceback": [{"path": "tests/test_acc19_pr_verification.py", "lineno": 95, "message": "in test_pr_crd_definition_exists"}], "longrepr": "tests/test_acc19_pr_verification.py:95: in test_pr_crd_definition_exists\n    self.assertEqual(result.returncode, 0, \"Should be able to query CRDs\")\nE   AssertionError: 1 != 0 : Should be able to query CRDs"}, "teardown": {"duration": 0.00026936607901006937, "outcome": "passed"}}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_pr_resource_lifecycle_state", "lineno": 255, "outcome": "failed", "keywords": ["test_pr_resource_lifecycle_state", "TestACC19O2IMSProvisioningRequest", "test_acc19_pr_verification.py", "tests", "ubuntu", ""], "setup": {"duration": 0.00023246498312801123, "outcome": "passed"}, "call": {"duration": 0.288164141937159, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 703, "message": "AssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource"}, "traceback": [{"path": "tests/test_acc19_pr_verification.py", "lineno": 262, "message": "in test_pr_resource_lifecycle_state"}, {"path": "tests/test_acc19_pr_verification.py", "lineno": 78, "message": "in test_discover_pr_crd_resources"}], "longrepr": "tests/test_acc19_pr_verification.py:262: in test_pr_resource_lifecycle_state\n    self.test_discover_pr_crd_resources()\ntests/test_acc19_pr_verification.py:78: in test_discover_pr_crd_resources\n    self.assertGreater(len(discovered_crds), 0,\nE   AssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource"}, "teardown": {"duration": 0.00030376692302525043, "outcome": "passed"}}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_pr_resource_validation_schema", "lineno": 197, "outcome": "failed", "keywords": ["test_pr_resource_validation_schema", "TestACC19O2IMSProvisioningRequest", "test_acc19_pr_verification.py", "tests", "ubuntu", ""], "setup": {"duration": 0.00020533695351332426, "outcome": "passed"}, "call": {"duration": 0.2812203159555793, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 703, "message": "AssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource"}, "traceback": [{"path": "tests/test_acc19_pr_verification.py", "lineno": 204, "message": "in test_pr_resource_validation_schema"}, {"path": "tests/test_acc19_pr_verification.py", "lineno": 78, "message": "in test_discover_pr_crd_resources"}], "longrepr": "tests/test_acc19_pr_verification.py:204: in test_pr_resource_validation_schema\n    self.test_discover_pr_crd_resources()\ntests/test_acc19_pr_verification.py:78: in test_discover_pr_crd_resources\n    self.assertGreater(len(discovered_crds), 0,\nE   AssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource"}, "teardown": {"duration": 0.0002643569605425, "outcome": "passed"}}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_pr_resources_have_ready_status", "lineno": 106, "outcome": "failed", "keywords": ["test_pr_resources_have_ready_status", "TestACC19O2IMSProvisioningRequest", "test_acc19_pr_verification.py", "tests", "ubuntu", ""], "setup": {"duration": 0.00022164999973028898, "outcome": "passed"}, "call": {"duration": 0.29387258598580956, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 703, "message": "AssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource"}, "traceback": [{"path": "tests/test_acc19_pr_verification.py", "lineno": 113, "message": "in test_pr_resources_have_ready_status"}, {"path": "tests/test_acc19_pr_verification.py", "lineno": 78, "message": "in test_discover_pr_crd_resources"}], "longrepr": "tests/test_acc19_pr_verification.py:113: in test_pr_resources_have_ready_status\n    self.test_discover_pr_crd_resources()\ntests/test_acc19_pr_verification.py:78: in test_discover_pr_crd_resources\n    self.assertGreater(len(discovered_crds), 0,\nE   AssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource"}, "teardown": {"duration": 0.00026711507234722376, "outcome": "passed"}}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19O2IMSProvisioningRequest::test_pr_services_are_reachable", "lineno": 151, "outcome": "failed", "keywords": ["test_pr_services_are_reachable", "TestACC19O2IMSProvisioningRequest", "test_acc19_pr_verification.py", "tests", "ubuntu", ""], "setup": {"duration": 0.00019441102631390095, "outcome": "passed"}, "call": {"duration": 0.06710939796175808, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 866, "message": "AssertionError: 1 != 0 : Should be able to get services"}, "traceback": [{"path": "tests/test_acc19_pr_verification.py", "lineno": 163, "message": "in test_pr_services_are_reachable"}], "longrepr": "tests/test_acc19_pr_verification.py:163: in test_pr_services_are_reachable\n    self.assertEqual(result.returncode, 0, \"Should be able to get services\")\nE   AssertionError: 1 != 0 : Should be able to get services"}, "teardown": {"duration": 0.00033247401006519794, "outcome": "passed"}}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19Integration::test_end_to_end_pr_verification_workflow", "lineno": 373, "outcome": "failed", "keywords": ["test_end_to_end_pr_verification_workflow", "TestACC19Integration", "test_acc19_pr_verification.py", "tests", "ubuntu", ""], "setup": {"duration": 0.00031719100661575794, "outcome": "passed"}, "call": {"duration": 1.5005282589700073, "outcome": "failed", "crash": {"path": "/home/ubuntu/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", "lineno": 703, "message": "AssertionError: Lists differ: [(<test_acc19_pr_verification.TestACC19O2I[3338 chars]\\n')] != []\n\nFirst list contains 7 additional elements.\nFirst extra element 0:\n(<test_acc19_pr_verification.TestACC19O2IMSProvisioningRequest testMethod=test_discover_pr_crd_resources>, 'Traceback (most recent call last):\\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 78, in test_discover_pr_crd_resources\\n    self.assertGreater(len(discovered_crds), 0,\\nAssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource\\n')\n\nDiff is 3761 characters long. Set self.maxDiff to None to see it. : No verification steps should fail"}, "traceback": [{"path": "tests/test_acc19_pr_verification.py", "lineno": 387, "message": "in test_end_to_end_pr_verification_workflow"}], "stderr": "======================================================================\nFAIL: test_discover_pr_crd_resources (test_acc19_pr_verification.TestACC19O2IMSProvisioningRequest.test_discover_pr_crd_resources)\nTest: Should discover ProvisioningRequest CRD resources across all namespaces\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 78, in test_discover_pr_crd_resources\n    self.assertGreater(len(discovered_crds), 0,\nAssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource\n\n======================================================================\nFAIL: test_generate_acc19_artifacts (test_acc19_pr_verification.TestACC19O2IMSProvisioningRequest.test_generate_acc19_artifacts)\nTest: Should generate comprehensive acc19_ready.json artifact\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 303, in test_generate_acc19_artifacts\n    self.test_discover_pr_crd_resources()\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 78, in test_discover_pr_crd_resources\n    self.assertGreater(len(discovered_crds), 0,\nAssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource\n\n======================================================================\nFAIL: test_pr_crd_definition_exists (test_acc19_pr_verification.TestACC19O2IMSProvisioningRequest.test_pr_crd_definition_exists)\nTest: ProvisioningRequest CRD definition should exist in cluster\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 95, in test_pr_crd_definition_exists\n    self.assertEqual(result.returncode, 0, \"Should be able to query CRDs\")\nAssertionError: 1 != 0 : Should be able to query CRDs\n\n======================================================================\nFAIL: test_pr_resource_lifecycle_state (test_acc19_pr_verification.TestACC19O2IMSProvisioningRequest.test_pr_resource_lifecycle_state)\nTest: PR resources should show proper lifecycle state progression\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 262, in test_pr_resource_lifecycle_state\n    self.test_discover_pr_crd_resources()\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 78, in test_discover_pr_crd_resources\n    self.assertGreater(len(discovered_crds), 0,\nAssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource\n\n======================================================================\nFAIL: test_pr_resource_validation_schema (test_acc19_pr_verification.TestACC19O2IMSProvisioningRequest.test_pr_resource_validation_schema)\nTest: PR resources should conform to expected schema structure\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 204, in test_pr_resource_validation_schema\n    self.test_discover_pr_crd_resources()\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 78, in test_discover_pr_crd_resources\n    self.assertGreater(len(discovered_crds), 0,\nAssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource\n\n======================================================================\nFAIL: test_pr_resources_have_ready_status (test_acc19_pr_verification.TestACC19O2IMSProvisioningRequest.test_pr_resources_have_ready_status)\nTest: ProvisioningRequest resources should be in READY state\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 113, in test_pr_resources_have_ready_status\n    self.test_discover_pr_crd_resources()\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 78, in test_discover_pr_crd_resources\n    self.assertGreater(len(discovered_crds), 0,\nAssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource\n\n======================================================================\nFAIL: test_pr_services_are_reachable (test_acc19_pr_verification.TestACC19O2IMSProvisioningRequest.test_pr_services_are_reachable)\nTest: Services associated with PRs should be reachable\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 163, in test_pr_services_are_reachable\n    self.assertEqual(result.returncode, 0, \"Should be able to get services\")\nAssertionError: 1 != 0 : Should be able to get services\n\n----------------------------------------------------------------------\nRan 7 tests in 1.495s\n\nFAILED (failures=7)\n", "longrepr": "tests/test_acc19_pr_verification.py:387: in test_end_to_end_pr_verification_workflow\n    self.assertEqual(result.failures, [], \"No verification steps should fail\")\nE   AssertionError: Lists differ: [(<test_acc19_pr_verification.TestACC19O2I[3338 chars]\\n')] != []\nE   \nE   First list contains 7 additional elements.\nE   First extra element 0:\nE   (<test_acc19_pr_verification.TestACC19O2IMSProvisioningRequest testMethod=test_discover_pr_crd_resources>, 'Traceback (most recent call last):\\n  File \"/home/ubuntu/tests/test_acc19_pr_verification.py\", line 78, in test_discover_pr_crd_resources\\n    self.assertGreater(len(discovered_crds), 0,\\nAssertionError: 0 not greater than 0 : Should discover at least one ProvisioningRequest CRD resource\\n')\nE   \nE   Diff is 3761 characters long. Set self.maxDiff to None to see it. : No verification steps should fail"}, "teardown": {"duration": 0.00028685503639280796, "outcome": "passed"}}, {"nodeid": "tests/test_acc19_pr_verification.py::TestACC19Integration::test_verification_artifacts_completeness", "lineno": 389, "outcome": "passed", "keywords": ["test_verification_artifacts_completeness", "TestACC19Integration", "test_acc19_pr_verification.py", "tests", "ubuntu", ""], "setup": {"duration": 0.0002580090658739209, "outcome": "passed"}, "call": {"duration": 0.00028131098952144384, "outcome": "passed"}, "teardown": {"duration": 0.00021083606407046318, "outcome": "passed"}}]}