name: LLM Adapter CI

on:
  push:
    branches: [ main, summit-llm-e2e ]
    paths:
      - 'adapter/**'
      - 'tests/**'
      - '.github/workflows/adapter-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'adapter/**'
      - 'tests/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov PyYAML
        pip install fastapi uvicorn pydantic jsonschema
        pip install httpx pytest-asyncio

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 adapter/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 adapter/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run schema validation tests
      run: |
        pytest tests/test_intent_schema.py -v

    - name: Run CLI integration tests
      run: |
        pytest tests/test_cli_call.py -v

    - name: Run golden file tests
      run: |
        pytest tests/test_golden.py -v

    - name: Run all tests with coverage
      run: |
        pytest tests/ --cov=adapter --cov-report=xml --cov-report=html

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-adapter

  validate-schema:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Validate JSON Schema
      run: |
        python -m pip install jsonschema
        python -c "import json; import jsonschema; schema = json.load(open('adapter/app/schema.json', 'r')); jsonschema.Draft7Validator.check_schema(schema); print('âœ… Schema is valid!')"

  package:
    needs: [test, validate-schema]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Create deployment package
      run: |
        mkdir -p dist
        cd adapter
        zip -r ../dist/llm-adapter-${{ github.sha }}.zip . -x "*.pyc" -x "__pycache__/*"
        cd ..
        tar -czf dist/llm-adapter-${{ github.sha }}.tar.gz adapter/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: llm-adapter-package
        path: dist/
        retention-days: 30

    - name: Create requirements file
      run: |
        cat > dist/requirements.txt << EOF
        fastapi>=0.100.0
        uvicorn>=0.23.0
        pydantic>=2.0.0
        jsonschema>=4.0.0
        EOF

    - name: Upload requirements
      uses: actions/upload-artifact@v4
      with:
        name: requirements
        path: dist/requirements.txt